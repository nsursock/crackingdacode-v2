<section
  class="dark:bg-gray-900 dark:text-gray-200"
  x-data="{ isInViewport: false }"
  x-intersect.once="isInViewport = !isInViewport"
>
  <footer x-cloak x-show="isInViewport" class="mx-auto max-w-7xl px-6 lg:px-8 mt-24 w-full sm:mt-32 lg:mt-40 dark:bg-gray-900">
    <div class="mx-auto max-w-2xl lg:max-w-none">
      <div>
        <div class="grid grid-cols-1 gap-x-8 gap-y-16 lg:grid-cols-2">
          <nav>
            <ul role="list" class="grid grid-cols-2 gap-8 sm:grid-cols-3">
              {% for menu in nav.menus %}
                {% if menu.submenus %}
                  <li>
                    <div class="font-display text-sm font-semibold tracking-wider dark:text-gray-100 text-gray-900">{{ menu.name }}</div>
                    <ul role="list" class="mt-4 text-sm text-gray-700 dark:text-gray-300">
                      {% for submenu in menu.submenus %}
                        <li class="mt-4">
                          <a class="transition dark:hover:text-gray-100 hover:text-gray-900" href="{{ submenu.route }}">{{ submenu.name }}</a>
                        </li>
                      {% endfor %}
                    </ul>
                  </li>
                {% endif %}
              {% endfor %}
            </ul>
          </nav>
          <div class="flex lg:justify-end max-w-sm" x-data="dataCta">
            <div class="mt-5 sm:mt-8 sm:flex sm:flex-col sm:items-center sm:justify-center lg:block" >
              <h3
                class="text-sm font-semibold text-indigo-500 tracking-wider uppercase"
            >
                Interested in donating?
            </h3>
              <p class="mt-1 text-base text-gray-500 dark:text-gray-400">
                Support our cause: Your generosity will significantly boost our efforts.
            </p>
              <div class="mt-8 flex lg:mt-4 lg:flex-shrink-0 ">
                <div x-data="{symbol: '$'}">
                  <label for="amount" class="text-sm font-medium text-gray-700 hidden">
            Amount
          </label>
                  <div class="relative">
                    <div class=" absolute -inset-0.5 bg-gray-200 dark:bg-gray-700 rounded-md blur"></div>
                    {# <div class=" absolute inset-y-0 left-0 ml-3 pl-2 flex items-center pointer-events-none ">
              <span class="text-gray-500 text-base font-medium" x-text="symbol"></span>
            </div> #}
                    <input
              x-model.number="amount"
              type="text"
              name="amount"
              id="amount"
              class="relative dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 mx-1 inline-flex items-center justify-center px-4 py-3
                border text-base font-medium rounded-md text-indigo-600 bg-white hover:bg-indigo-50 border-gray-300 "
              placeholder="0.00"/>
                    <div class="absolute inset-y-0 right-0 flex items-center">
                      <label for="currency" class="sr-only">Currency</label>
                      <select
                x-model="currency"
                @change="symbol = document.querySelector(`#${event.target.id} option:checked`).dataset.symbol"
                id="currency"
                name="currency"
                class=" focus:ring-indigo-500 focus:border-indigo-500 h-full py-0 pl-2 pr-7 border-transparent bg-transparent
                  text-gray-500 text-base font-medium rounded-md ">
                        <option data-symbol="$" data-placeholder="0.00">USD</option>
                        <option data-symbol="€" data-placeholder="0.00">EUR</option>
                        <option data-symbol="£" data-placeholder="0.00">GBP</option>
                        <option data-symbol="¥" data-placeholder="0.00">JPY</option>
                        <option data-symbol="$" data-placeholder="0.00">CAD</option>
                        <option data-symbol="$" data-placeholder="0.00">AUD</option>
                        <option data-symbol="F" data-placeholder="0.00">CHF</option>
                        <option data-symbol="₹" data-placeholder="0.00">INR</option>
                        <option data-symbol="元" data-placeholder="0.00">CNY</option>
                        <option data-symbol="R" data-placeholder="0.00">BRL</option>
                      </select>
                    </div>
                  </div>
                </div>
                <div class="inline-flex rounded-md shadow relative ml-3 ">
                  <div class=" absolute -inset-0.5 bg-indigo-600 dark:bg-indigo-500 rounded-md blur"></div>
                  <button :disabled="parseFloat(amount) < 3"
            @click="pay"
            id="donate-button"
            class="relative inline-flex items-center justify-center px-5 py-3 border border-indigo-500 text-base font-medium rounded-md
              text-white bg-indigo-600 hover:bg-indigo-700">
                    <span x-show="!isFetching" id="pay-button">Pay</span>
                    <div x-show="isFetching" id="wait-button" class="inline-flex items-center">
                      <svg
              class="animate-spin h-5 w-5 text-white"
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 24 24">
                        <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                        <path
                class="opacity-75"
                fill="currentColor"
                d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                      </svg>
                    </div>
                    <!-- </template> -->
                  </button>
                </div>
              </div>
              {% include 'partials/modals/donation.njk' %}
            </div>
            {# <form class="max-w-sm">
            <h2 class="font-display text-sm font-semibold tracking-wider text-gray-900">Sign up for our newsletter</h2>
            <p class="mt-4 text-sm text-gray-700">Subscribe to get the latest design news, articles, resources and inspiration.</p>
            <div class="relative mt-6">
              <input type="email" placeholder="Email address" autocomplete="email" aria-label="Email address" class="block w-full rounded-2xl border border-gray-300 bg-transparent py-4 pl-6 pr-20 text-base/6 text-gray-900 ring-4 ring-transparent transition placeholder:text-gray-500 focus:border-gray-900 focus:outline-none focus:ring-gray-900/5">
              <div class="absolute inset-y-1 right-1 flex justify-end">
                <button type="submit" aria-label="Submit" class="flex aspect-square h-full items-center justify-center rounded-xl bg-gray-900 text-white transition hover:bg-gray-800">
                  <svg viewBox="0 0 16 6" aria-hidden="true" class="w-4">
                    <path fill="currentColor" fill-rule="evenodd" clip-rule="evenodd" d="M16 3 10 .5v2H0v1h10v2L16 3Z"></path>
                  </svg>
                </button>
              </div>
            </div>
          </form> #}
          </div>
        </div>
        <div x-data="{ year: new Date().getFullYear() }" class="mb-20 mt-24 flex flex-col sm:flex-row items-center justify-between gap-x-6 gap-y-4 border-t dark:border-gray-100/10 border-gray-900/10 pt-12">
          <a aria-label="Home" href="/" class="inline-flex items-center gap-x-3">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-auto stroke-current text-indigo-500 sm:h-10" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
              <title>Landing Page</title>
              <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        d="M12 4v1m6 11h2m-6 0h-2v4m0-11v3m0 0h.01M12 12h4.01M16 20h4M4 12h4m12 0h.01M5 8h2a1 1 0 001-1V5a1 1 0 00-1-1H5a1 1 0
                            00-1 1v2a1 1 0 001 1zm12 0h2a1 1 0 001-1V5a1 1 0 00-1-1h-2a1 1 0 00-1 1v2a1 1 0 001 1zM5 20h2a1 1 0 001-1v-2a1 1 0
                            00-1-1H5a1 1 0 00-1 1v2a1 1 0 001 1z"/>
            </svg>
            <div class="flex flex-col justify-center">
              <span class="dark:text-gray-100 text-gray-900"> Cracking Da Code </span>
              <span class="dark:text-gray-400 text-gray-600"> {{ env.tagline }} </span>
            </div>
          </a>
          {# {% include 'partials/socials.njk' %} #}
          <p class="text-sm dark:text-gray-300 text-gray-700">© Sursock Labs <!-- -->
            <span x-text="year"></span></p>
        </div>
      </div>
    </div>
  </footer>

  <!-- Global notification live region, render this permanently at the end of the document -->
  <div x-data="{ openCookieNotif: false, openCompleteProfile: false }" 
    x-init="() => { setTimeout(() => openCookieNotif = true, 500); setTimeout(() => openCompleteProfile = true, 3000); }"
   aria-live="assertive" class="pointer-events-none fixed inset-0 z-[100] flex items-end px-4 py-6 sm:items-start sm:p-6">
    <div class="flex w-full flex-col items-center space-y-4 sm:items-end">
      {# {% if page
      .url
      .includes('/blog') %}
      {% include './partials/notification-posts.njk' %}
    {% endif %} #}
      {% include 'partials/notifications/confirmation.njk' %}
      {# {% if page.url == '/' %} #}
      {% include 'partials/notifications/privacy.njk' %}
      {# {% endif %} #}
    </div>
  </div>

  {% if not env.devMode %}
    <template x-if="!('crdacode_InternalTraffic' in localStorage) && window.location.hostname !== 'localhost'">
      <div>
        <script async src="https://cdn.splitbee.io/sb.js"></script>
      </div>
    </template>
  {% endif %}
</section>

<script>
  function loadScript(src) {
    return new Promise(function (resolve, reject) {
      var s
      s = document.createElement('script')
      s.src = src
      s.onload = resolve
      s.onerror = reject
      if (document.body == null) {
        document
          .head
          .appendChild(s)
      } else {
        document
          .body
          .appendChild(s)
      }
    })
  }
  function dataCta() {
    return {
      isFetching: false,
      error: '',
      amount: 3.00,
      currency: 'USD',
      stripe: null,
      elements: null,
      intentId: '',
      async pay() {
        this.error = ''
        this.isFetching = !this.isFetching
        await loadScript('https://js.stripe.com/v3')
        this.stripe = Stripe('{{ env.stripeKey }}')
        const data = {
          amount: this.amount,
          currency: this.currency
        }
        const response = await fetch('/api/payment?mode=donate', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(data)
        })
        const json = await response.json()
        const clientSecret = json.client_secret
        this.intentId = json.intentId

        const appearance = {
          theme: document
            .documentElement
            .classList
            .contains('dark')
              ? 'night'
              : 'stripe',
          variables: {
            fontFamily: 'Aldrich'
          }
        }
        const options = {
          clientSecret: clientSecret,
          // Fully customizable with appearance API.
          appearance: appearance,
          fonts: [
            {
              family: 'Aldrich',
              src: 'url(/assets/fonts/aldrich/aldrich-v17-latin-regular.ttf)',
              weight: '400',
              display: 'block',
              style: 'normal'
            }
          ]
        }
        // Set up Stripe.js and Elements to use in checkout form, passing the client secret obtained in step 2
        this.elements = this
          .stripe
          .elements(options)
        // Create and mount the Payment Element
        const paymentElement = this
          .elements
          .create('payment')
        paymentElement.mount('#payment-element')
        this.showDonationModal = !this.showDonationModal
        this.isFetching = !this.isFetching
      }
    }
  }
</script>