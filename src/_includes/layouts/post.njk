---
layout: layouts/base.njk
eleventyComputed:
  title: "{{ title }} {{ title2 }}"
---

{% include 'sections/posts/hero.njk' %}

<article id="article" x-data="dataPosts" x-init="adapt($el)" class="dark:bg-gray-900 relative isolate overflow-hidden bg-white px-6 py-24 sm:py-32 lg:overflow-visible lg:px-0">
  {# <div class="absolute inset-0 -z-10 overflow-hidden">
    <svg class="absolute left-[max(50%,25rem)] top-0 h-[64rem] w-[128rem] -translate-x-1/2 stroke-gray-200 [mask-image:radial-gradient(64rem_64rem_at_top,white,transparent)]" aria-hidden="true">
      <defs>
        <pattern id="e813992c-7d03-4cc4-a2bd-151760b470a0" width="200" height="200" x="50%" y="-1" patternUnits="userSpaceOnUse">
          <path d="M100 200V.5M.5 .5H200" fill="none"/>
        </pattern>
      </defs>
      <svg x="50%" y="-1" class="overflow-visible fill-gray-50">
        <path d="M-100.5 0h201v201h-201Z M699.5 0h201v201h-201Z M499.5 400h201v201h-201Z M-300.5 600h201v201h-201Z" stroke-width="0"/>
      </svg>
      <rect width="100%" height="100%" stroke-width="0" fill="url(#e813992c-7d03-4cc4-a2bd-151760b470a0)"/>
    </svg>
  </div> #}
  <div class="mx-auto grid max-w-2xl grid-cols-1 gap-x-8 gap-y-16 lg:mx-0 lg:max-w-none lg:grid-cols-2 lg:items-start lg:gap-y-10">
    {# <div class="lg:col-span-2 lg:col-start-1 lg:row-start-1 lg:mx-auto lg:grid lg:w-full lg:max-w-7xl lg:grid-cols-2 lg:gap-x-8 lg:px-8">
      <div class="lg:pr-4">
        <div class="lg:max-w-lg">
          <p class="text-base font-semibold leading-7 text-indigo-600">{{ tags[0] }}</p>
          <h1 class="mt-2 text-3xl font-bold tracking-tight text-gray-900 sm:text-4xl">{{ title }}</h1>
          <p class="mt-6 text-xl leading-8 text-gray-700">{{ description }}</p>
        </div>
      </div>
    </div> #}
    <div class="order-last md:-ml-12 -mt-12 md:p-12 lg:sticky lg:top-4 lg:col-start-2 lg:row-span-2 lg:row-start-1 lg:overflow-hidden">
      {# <figure x-ref="figure">
        <img class="w-[48rem] max-w-none rounded-xl bg-gray-900 shadow-xl ring-1 ring-gray-400/10 sm:w-[36rem]" src="{{ featured }}&q=80&w=1080&h=720&fm=webp" alt="{{ alt }}">
        <figcaption class=" mt-3">
    Photo by <a class="underline" href="https://unsplash.com/@{{ handle }}?utm_source=crackingdacode&utm_medium=referral">{{ name }}</a> on <a class="underline" href="https://unsplash.com/?utm_source=crackingdacode&utm_medium=referral">Unsplash</a>
        </figcaption>
      </figure> #}
      {% for auth in authors.authors %}
        {% if auth.name == author %}
          <div class="ring-1 dark:ring-gray-100/5 ring-gray-900/5 mt-12 md:mx-4 mb-6 overflow-hidden rounded-xl bg-white shadow-lg dark:bg-gray-850 md:mx-auto md:max-w-lg lg:max-w-xl">
            <div class="md:flex md:h-full">
              <div class="md:flex-shrink-0">
                <img class="w-full object-cover md:h-full md:w-48" src="{{ auth.photo }}.jpg" alt="Photo of author {{ auth.name }}"/>
              </div>
              <div class="p-8 dark:bg-gray-850">
                <div class="text-sm font-semibold uppercase tracking-wide text-indigo-500">Written by {{ auth.name }}</div>
                {# <a rel="noopener" target="_blank" href="{{ versions[0].link }}" class="mt-1 block text-lg font-medium leading-tight text-black hover:underline dark:text-white"> Inspired by {{ track }} recorded by {{ versions[0].artist }}</a> #}
                <p class="mt-2 mb-5 text-gray-500 dark:text-gray-400">{{ auth.short }}</p>
                {% include 'partials/socials.njk' %}
              </div>
              
            </div>
          </div>
        {% endif %}
      {% endfor %}

    </div>
    <div class="lg:col-span-2 lg:col-start-1 lg:row-start-2 lg:mx-auto lg:grid lg:w-full lg:max-w-7xl lg:grid-cols-2 lg:gap-x-8 lg:px-8">
      <div class="lg:pr-4">
        <div class="prose lg:prose-xl dark:prose-invert dark:text-gray-400 max-w-xl text-base leading-7 text-gray-700 lg:max-w-lg">
          {{ content | safe}}
        </div>
      </div>
    </div>
  </div>
</article>
<script>
  function dataPosts() {
    return {
      isMobile() {
        return Alpine
          .store('utils')
          .isMobile()
      },

      adapt(el) {
        Array
          .from(el.getElementsByTagName('aside'))
          .forEach((aside) => {
            //console.log(aside.classList)
            aside.classList.forEach((value) => {
              value.includes('md:') && aside
              .classList
              .remove(value)
            });
          });
        /*Array
          .from(el.getElementsByClassName('md:float-right'))
          .forEach((aside) => {
            aside
              .classList
              .remove('md:-mr-56'),
            aside
              .classList
              .add('md:-mr-24')
          });
        Array
          .from(el.getElementsByClassName('md:float-left'))
          .forEach((aside) => {
            aside
              .classList
              .remove('md:-ml-56'),
            aside
              .classList
              .add('md:-ml-24')
          })*/
      },

      images: [],

      handleImage(index) {
        // Get references to the <img> and <figcaption> elements
        var imgElement = this
          .$refs
          .figure
          .querySelector('img');
        var figElement = this
          .$refs
          .figure
          .querySelector('figcaption');

        // Update the <img> element with the new image information
        imgElement.src = this
          .images[index]
          .url + '&w=1080&h=720'
        imgElement.alt = this
          .images[index]
          .alt;

        // Remove the existing <figcaption> element
        figElement.remove();

        // Create a new <figcaption> element with updated information
        var newFigElement = document.createElement('figcaption');
        newFigElement.className = 'text-center mt-3';
        newFigElement.innerHTML = `
        Photo by <a class="underline" href="https://unsplash.com/@${this
          .images[index]
          .handle}?utm_source=crackingdacode&utm_medium=referral">${this
          .images[index]
          .name}</a>
        on <a class="underline" href="https://unsplash.com/?utm_source=crackingdacode&utm_medium=referral">Unsplash</a>
    `;

        // Append the new <figcaption> element after the <img> element
        this
          .$refs
          .figure
          .appendChild(newFigElement);
      },

      handleContent(el) {
        Array
          .from(el.getElementsByTagName('h2'))
          .forEach((headline, index) => {
            headline.setAttribute('x-intersect', `handleImage(${index})`);
          })

        this.images = Array
          .from(el.getElementsByTagName('aside'))
          .map((asideElement) => {
            asideElement
              .classList
              .add('hidden');

            var imgElement = asideElement.querySelector('img');

            // Access the <figcaption> element within the <aside>
            var figcaptionElement = asideElement.querySelector('figcaption');

            // Access the first <a> element within the <figcaption>
            var authorLinkElement = figcaptionElement.querySelector('a:first-child');

            // Retrieve the href attribute and parse for the handle
            var href = authorLinkElement.getAttribute('href');
            var handle = href.substring(href.indexOf('@') + 1, href.indexOf('?')); // Exclude the "?" part

            // Retrieve the name from the text content
            var name = authorLinkElement
              .textContent
              .trim();

            return {url: imgElement.dataset.src, alt: imgElement.alt, name, handle}
          })
      }
    }
  }
</script>