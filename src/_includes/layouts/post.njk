---
layout: layouts/base.njk
eleventyComputed:
  title: "{{ title }} {{ title2 }}"
---

{% block body %}

  <div :class="isScrollingUp ? 'sticky top-0 z-40 animate-swing' : 'hidden'">
    {% include 'header.njk' %}
  </div>

  {% include 'sections/posts/banner.njk' %}
  {% include 'sections/posts/hero.njk' %}

  <article x-data="dataPosts" x-init="adapt($el)" class=" dark:bg-gray-900 relative isolate overflow-hidden bg-white px-6 py-24 sm:py-32 lg:overflow-visible lg:px-0">
    <div class="relative bg-white dark:bg-gray-900">
      <div class="mx-auto max-w-7xl px-4 sm:px-6">
        <div class="mx-auto flex max-w-2xl flex-col lg:flex-row lg:gap-x-8 lg:gap-y-16 lg:mx-0 lg:max-w-none lg:justify-between lg:items-start lg:gap-y-10">

          <div class="lg:block order-last md:order-none hidden lg:top-4 lg:sticky lg:w-1/12 lg:-mr-12 lg:-mt-28">
            {% include 'sections/posts/sharing.njk' %}
          </div>

          <div class="lg:pr-4">
            <div class="lg:max-w-lg mb-5">
              <p class="text-base font-semibold leading-7 dark:text-indigo-500 text-indigo-600">{{ word }}</p>
              <h1 class="mt-2 text-3xl font-bold tracking-tight dark:text-gray-100 text-gray-900 sm:text-4xl">{{ headline }}</h1>
              <p class="mt-6 text-xl lg:text-2xl leading-8 dark:text-gray-300 text-gray-700">{{ paragraph }}</p>
            </div>
            <div id="article" class="prose lg:prose-xl dark:prose-invert dark:text-gray-400 max-w-xl text-base leading-7 text-gray-700 lg:max-w-lg">
              {{ content | safe}}
              ({{ content | wordcount }} words)
            </div>
          </div>

          <!-- progress bar on mobile -->
          <div class="fixed inset-x-0 bottom-0 z-50 md:hidden">
            <div class="h-2 bg-indigo-500" :style="`width: ${percent}%`"></div>
          </div>

          <div class="lg:top-16 lg:sticky">
            {% for auth in authors.authors %}
              {% if auth.name == author %}
                <div class="ring-1 dark:ring-gray-100/5 ring-gray-900/5 mt-12 md:mx-4 mb-6 overflow-hidden rounded-xl bg-white shadow-lg dark:bg-gray-850 md:mx-auto md:max-w-md lg:max-w-lg">
                  <div class="md:flex md:h-full">
                    <div class="">
                      <div class="p-8 dark:bg-gray-850">
                        <div class="p-2 float-right md:flex-shrink-0 ">
                          <div class="ring-1 dark:ring-gray-100/5 ring-gray-900/5 overflow-hidden rounded-full bg-white shadow-lg dark:bg-gray-850 mx-auto lg:mx-0">
                            <img class="w-24 h-24 object-cover" src="{{ auth.photo }}.jpg" alt="Photo of author {{ auth.name }}">
                          </div>
                        </div>
                        <div class="text-sm font-semibold uppercase tracking-wide text-indigo-500">Written by {{ auth.name }}</div>
                        <p class="mt-2 mb-5 text-gray-500 dark:text-gray-400">{{ auth.short }}</p>
                        {% include 'partials/socials.njk' %}
                      </div>
                    </div>
                  </div>
                </div>
              {% endif %}
            {% endfor %}
          </div>

          <div class="lg:hidden mt-4 sm:mt-5 sm:ml-3 flex flex-col sm:flex-row justify-center">
            <button 
                class="sm:w-64 block w-full px-5 py-3 text-base font-medium text-white bg-gray-900 border border-transparent shadow rounded-md
                  hover:bg-black focus:outline-none focus:ring-2 focus:ring-white focus:ring-offset-2 focus:ring-offset-indigo-500
                  sm:px-10">
                Share
              </button>
            {# {% include 'sections/posts/sharing.njk' %} #}
            <button 
                class="sm:w-64 sm:ml-7 mt-3 sm:mt-0 block w-full px-5 py-3 text-base font-medium text-white bg-gray-900 border border-transparent shadow rounded-md
                  hover:bg-black focus:outline-none focus:ring-2 focus:ring-white focus:ring-offset-2 focus:ring-offset-indigo-500
                  sm:px-10">
                Comment
              </button>
          </div>

        </div>
      </div>
    </div>
  </article>

  {% include 'sections/posts/comments.njk' %}

{% endblock %}
<script>
  function dataPosts() {
    return {
      isMobile() {
        return Alpine
          .store('utils')
          .isMobile()
      },

      adapt(el) {
        Array
          .from(el.getElementsByTagName('aside'))
          .forEach((aside) => {
            //console.log(aside.classList)
            aside
              .classList
              .forEach((value) => {
                value.includes('md:') && aside
                  .classList
                  .remove(value)
              });
          });
        /*Array
          .from(el.getElementsByClassName('md:float-right'))
          .forEach((aside) => {
            aside
              .classList
              .remove('md:-mr-56'),
            aside
              .classList
              .add('md:-mr-24')
          });
        Array
          .from(el.getElementsByClassName('md:float-left'))
          .forEach((aside) => {
            aside
              .classList
              .remove('md:-ml-56'),
            aside
              .classList
              .add('md:-ml-24')
          })*/
      },

      images: [],

      handleImage(index) {
        // Get references to the <img> and <figcaption> elements
        var imgElement = this
          .$refs
          .figure
          .querySelector('img');
        var figElement = this
          .$refs
          .figure
          .querySelector('figcaption');

        // Update the <img> element with the new image information
        imgElement.src = this
          .images[index]
          .url + '&w=1080&h=720'
        imgElement.alt = this
          .images[index]
          .alt;

        // Remove the existing <figcaption> element
        figElement.remove();

        // Create a new <figcaption> element with updated information
        var newFigElement = document.createElement('figcaption');
        newFigElement.className = 'text-center mt-3';
        newFigElement.innerHTML = `
        Photo by <a class="underline" href="https://unsplash.com/@${this
          .images[index]
          .handle}?utm_source=crackingdacode&utm_medium=referral">${this
          .images[index]
          .name}</a>
        on <a class="underline" href="https://unsplash.com/?utm_source=crackingdacode&utm_medium=referral">Unsplash</a>
    `;

        // Append the new <figcaption> element after the <img> element
        this
          .$refs
          .figure
          .appendChild(newFigElement);
      },

      handleContent(el) {
        Array
          .from(el.getElementsByTagName('h2'))
          .forEach((headline, index) => {
            headline.setAttribute('x-intersect', `handleImage(${index})`);
          })

        this.images = Array
          .from(el.getElementsByTagName('aside'))
          .map((asideElement) => {
            asideElement
              .classList
              .add('hidden');

            var imgElement = asideElement.querySelector('img');

            // Access the <figcaption> element within the <aside>
            var figcaptionElement = asideElement.querySelector('figcaption');

            // Access the first <a> element within the <figcaption>
            var authorLinkElement = figcaptionElement.querySelector('a:first-child');

            // Retrieve the href attribute and parse for the handle
            var href = authorLinkElement.getAttribute('href');
            var handle = href.substring(href.indexOf('@') + 1, href.indexOf('?')); // Exclude the "?" part

            // Retrieve the name from the text content
            var name = authorLinkElement
              .textContent
              .trim();

            return {url: imgElement.dataset.src, alt: imgElement.alt, name, handle}
          })
      }
    }
  }
</script>